version: "3"

x-aws-vpc: ${AWS_VPC}
x-aws-cluster: ${AWS_ECS_CLUSTER}
# x-aws-loadbalancer: ${AWS_ELB}

services:
  server:
    image: ${SERVER_IMAGE_URI:-marvelo-server}:${IMAGE_TAG:-latest}
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - target: 3000
        x-aws-protocol: http
    command: ["./wait-for-it.sh", "database:5432", "--", "yarn", "run:server"]
    volumes:
      - /usr/src/app
    environment:
      DATABASE_HOST: database
      DATABASE_PORT: 5432
    depends_on:
      - database
      - worker
  worker:
    image: ${WORKER_IMAGE_URI:-marvelo-worker}:${IMAGE_TAG:-latest}
    build:
      context: .
      dockerfile: Dockerfile
    command: ["./wait-for-it.sh", "database:5432", "--", "yarn", "run:worker"]
    volumes:
      - /usr/src/app
    environment:
      DATABASE_HOST: database
      DATABASE_PORT: 5432
    depends_on:
      - database
  storefront:
    image: ${STOREFRONT_IMAGE_URI:-marvelo-storefront}:${IMAGE_TAG:-latest}
    build:
      context: .
      dockerfile: Dockerfile-storefront
      args:
        STOREFRONT_VERSION: 0.1.25
    ports:
      - target: 4000
        x-aws-protocol: http
    environment:
      SERVER_API_HOST: http://server
      SERVER_API_PORT: 3000
      SERVER_API_PATH: shop-api
  database:
    image: postgres
    volumes:
      - /var/lib/postgresql/data
    ports:
      - "5432"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: vendure
