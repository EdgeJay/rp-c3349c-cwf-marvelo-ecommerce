version: "3"

x-aws-vpc: ${AWS_VPC}
x-aws-cluster: ${AWS_ECS_CLUSTER}
x-aws-loadbalancer: ${AWS_ELB}

services:
  nginx:
    image: ${NGINX_IMAGE_URI:-marvelo-nginx}:${IMAGE_TAG:-latest}
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    healthcheck:
      test: curl --fail http://localhost/healthcheck/ || exit 1
      interval: 1m
      timeout: 30s
      retries: 3
      start_period: 2m
    depends_on:
      - server
      - frontend
  server:
    image: ${SERVER_IMAGE_URI:-marvelo-server}:${IMAGE_TAG:-latest}
    build:
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - "1337"
    healthcheck:
      test: curl --fail http://localhost:1337 || exit 1
      interval: 1m
      timeout: 30s
      retries: 3
      start_period: 2m
    environment:
      NODE_ENV: development
      HOST: 0.0.0.0
      PORT: 1337
      DATABASE_CLIENT: postgres
      DATABASE_NAME: ${POSTGRES_DB:-strapi}
      DATABASE_HOST: database
      DATABASE_PORT: 5432
      DATABASE_USERNAME: ${POSTGRES_USER:-strapi}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD:-strapi}
      DEV_ADMIN_ALLOW: "true"
    depends_on:
      - database
  frontend:
    image: ${FRONTEND_IMAGE_URI:-marvelo-frontend}:${IMAGE_TAG:-latest}
    build:
      context: ./frontend
      dockerfile: Dockerfile
    expose:
      - "3000"
    healthcheck:
      test: curl --fail http://localhost:3000/api/healthcheck || exit 1
      interval: 1m
      timeout: 30s
      retries: 3
      start_period: 2m
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_STRAPI_API_URL: ${NEXT_PUBLIC_STRAPI_API_URL:-http://server:1337}
      NEXT_PUBLIC_STRAPI_UPLOADS_URL: ${NEXT_PUBLIC_STRAPI_UPLOADS_URL:-http://localhost}
  database:
    image: postgres
    expose:
      - "5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-strapi}
      POSTGRES_USER: ${POSTGRES_USER:-strapi}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-strapi}